"""new init

Revision ID: 141c7ba7588d
Revises:
Create Date: 2025-02-12 00:14:40.557215

"""
from typing import (
    Sequence,
    Union,
)

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision: str = '141c7ba7588d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "events",
        sa.Column("deadline", sa.DateTime(timezone=True), nullable=False),
        sa.Column("coefficient", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("state", sa.Enum('NEW', 'FINISHED_WIN', 'FINISHED_LOSE', name='eventstate'), nullable=False),
        sa.Column("event_id", sa.Uuid(), nullable=False),
        sa.CheckConstraint(
            "coefficient >= 1", name=op.f("ck_events_check_coefficient_positive")
        ),
        sa.PrimaryKeyConstraint("event_id", name=op.f("pk_events")),
        sa.UniqueConstraint("event_id", name=op.f("uq_events_event_id")),
    )
    op.create_unique_constraint(op.f("uq_events_event_id"), "events", ["event_id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("uq_events_event_id"), "events", type_="unique")
    op.drop_table('events')
    sa.Enum("NEW", "FINISHED_WIN", "FINISHED_LOSE", name="eventstate").drop(
        op.get_bind()
    )

    # ### end Alembic commands ###
